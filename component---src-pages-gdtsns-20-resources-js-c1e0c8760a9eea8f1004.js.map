{"version":3,"sources":["webpack:///./src/pages/gdtsns20/layout-2.js","webpack:///./src/pages/gdtsns20/resources.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ListLink","props","style","display","marginRight","to","children","margin","marginBottom","maxWidth","padding","listStyle","float","href","target","IndexPage","data","className","allMarkdownRemark","edges","map","node","key","id","class","dangerouslySetInnerHTML","__html","html","query","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"0IAGMA,EAAW,SAAAC,GAAK,OAClB,kBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,YAAC,IAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAIlB,sBAAmB,IAAhBA,EAAe,EAAfA,SACN,OAWV,OACA,mBAAKJ,MAAO,CAAEK,OAAO,cAAgBC,aAAa,OAAQC,SAAU,KAAMC,QAAQ,MAC7E,sBAAQR,MAAO,CAAEK,OAAO,cAAgBC,aAAa,OAAQC,SAAU,IAAKC,QAAQ,WAC/E,YAACV,EAAD,CAAUK,GAAG,cAAb,KACA,YAACL,EAAD,CAAUK,GAAG,uBAAb,0BACA,YAACL,EAAD,CAAUK,GAAG,uBAAb,YACA,YAACL,EAAD,CAAUK,GAAG,wBAAb,aAEA,kBAAIH,MAAO,CAAES,UAAU,OAASC,MAAM,QAAUF,QAAQ,iBAAmBF,aAAa,sBACxF,iBAAGK,KAAK,mGAAmGC,OAAO,UAAlH,YAEA,kBAAIZ,MAAO,CAAES,UAAU,OAASC,MAAM,QAAUF,QAAQ,WAAaF,aAAa,sBAClF,iBAAGK,KAAK,mGAAmGC,OAAO,UAAlH,eAGL,mBAAKZ,MAAO,CAAEK,OAAO,cAAgBC,aAAa,OAAQC,SAAU,IAAKC,QAAQ,WAC9E,oCAIHJ,K,wGCfQS,UAnBG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGrB,OAEI,YAAC,UAAD,KACG,mBAAKC,UAAU,OACbD,EAAKE,kBAAkBC,MAAMC,IAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,mBAAKC,IAAKD,EAAKE,GAAIC,MAAM,cAErB,mBAAMC,wBAAyB,CAAEC,OAAQL,EAAKM,cAcrD,IAAMC,EAAK,c,oBC/BlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,0HCctBK,QAAOC,QAELC,IAAMC,cAAc,K,0ECMhCC,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEJ,IAAMK,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O","file":"component---src-pages-gdtsns-20-resources-js-c1e0c8760a9eea8f1004.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nconst ListLink = props => (\n    <li style={{ display: `inline-block`, marginRight: `3rem` }}>\n      <Link to={props.to}>{props.children}</Link>\n    </li>\n  )\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  return (\n  <div style={{ margin: `1.5rem auto`, marginBottom:'3rem', maxWidth: 1440, padding: `0` }} >\n       <header style={{ margin: `1.5rem auto`, marginBottom:'3rem', maxWidth: 768, padding: `0 1rem` }}>\n            <ListLink to=\"/gdtsns20/\">☻</ListLink>\n            <ListLink to=\"/gdtsns20/projects/\">Projects and Exercises</ListLink>\n            <ListLink to=\"/gdtsns20/readings/\">Readings</ListLink>\n            <ListLink to=\"/gdtsns20/resources/\">Resources</ListLink> \n\n            <ul style={{ listStyle: `none`, float: `right`, padding: `2px 0 2px 1rem`, marginBottom: `calc(1.08rem / 2)`  }}>\n            <a href=\"https://docs.google.com/document/d/1bcEqetklIBCC4KnKfzgHVdskpiJFDCCLdO3mCfZX75M/edit?usp=sharing\" target=\"_blank\">Topics↗</a>\n            </ul>\n            <ul style={{ listStyle: `none`, float: `right`, padding: `2px 1rem`, marginBottom: `calc(1.08rem / 2)` }}>\n            <a href=\"https://docs.google.com/document/d/1Cvj3h4NVUty-QRlhDNu0wa1mhaJmuLo-0cQdkHHjTGE/edit?usp=sharing\" target=\"_blank\">Syllabus↗</a>\n            </ul>\n        </header>\n       <div style={{ margin: `1.5rem auto`, marginBottom:'3rem', maxWidth: 768, padding: `0 1rem` }}>\n          <h1>\n            Resources\n          </h1>\n       </div>\n      {children}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"./layout-2\"\n\n\n\n\nconst IndexPage = ({ data }) => {\n\n\nreturn (\n\n    <Layout>\n       <div className=\"col\">\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id} class=\"list col-6\">\n            {/* <div className=\"col-6\"> */}\n              <div  dangerouslySetInnerHTML={{ __html: node.html }} />\n            </div>\n          // </div>\n        ))}\n        </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\n\n\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order:DESC } \n        filter: {fileAbsolutePath: {regex: \"/gdtsns20/_resources/.*.md$/\"}}\n        ) {\n      totalCount\n      edges {\n        node {\n          html\n          id\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}